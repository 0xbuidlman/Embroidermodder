// LetterDialog.h : Header for CLetterDialog class
//
// This file is a part of embroidermodder.
// This program is free software; you can use, redistribute, and/or modify it
// under the terms of the GNU General Puplic License (GPL) as published by
// the Free Software Foundation.  See the file license.txt for details.
// http://embroidermodder.sourceforge.net/
//
#if !defined(AFX_LETTERDIALOG_H__D40F09E6_DE2A_459A_9BC9_6E92EF8DDF52__INCLUDED_)
#define AFX_LETTERDIALOG_H__D40F09E6_DE2A_459A_9BC9_6E92EF8DDF52__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// LetterDialog.h : header file
//

#define SELECTED_POINTS_CIRCLE_RADIUS 4

struct PathStruct {
public:
	int nNumPts;
	LPPOINT lpPoints;
	LPBYTE  lpTypes;
};

/////////////////////////////////////////////////////////////////////////////
// CLetterDialog dialog

class CLetterDialog : public CDialog
{
// Construction
public:
	CLetterDialog(CWnd* pParent = NULL);   // standard constructor

// My Data
	LOGFONT lf;
	COLORREF color;
	CDC *letterDC;
	double scaley;
	double scalex;
	CFont *windows_font;	// save this to be put back before destroying window.
	CSize textsize;

// Dialog Data
	//{{AFX_DATA(CLetterDialog)
	enum { IDD = IDD_LETTERINGDIALOG };
	CString	m_text;
	CString	m_selected_font_text;
	BOOL	m_running_outline_check;
	int		m_num_running_threads;
	double	m_running_length;
	BOOL	m_proportional_check;
	double	m_scale_height;
	double	m_scale_width;
	double	m_location_x;
	double	m_location_y;
	BOOL	m_show_stitches;
	BOOL	m_show_jumps;
	BOOL	m_preserve_details_check;
	//}}AFX_DATA

// My Functions
	PathStruct ConvertTextToPath(CDC* pDC, const char *text, CPoint spoint);
	void ScalePath(PathStruct path);
	pattern *ConvertPathToPattern(PathStruct path);
	void PaintPatternPreview(CDC *dc, pattern *pattern);
	CPoint pattern_point_to_screen_point(lfVector ppoint);
	lfVector screen_point_to_pattern_point(CPoint spoint);
	void DrawCircle(CDC *dc, CPoint center, int radius, int steps);
	void DeletePath(PathStruct path);
	CRect GetPathExtents(struct PathStruct path);
	double RunningStitchesToPoint(class pattern *pattern, lfVector ppoint, BOOL finish);

// Overrides
	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CLetterDialog)
	protected:
	virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support
	//}}AFX_VIRTUAL

// Implementation
protected:

	// Generated message map functions
	//{{AFX_MSG(CLetterDialog)
	virtual void OnOK();
	virtual void OnCancel();
	afx_msg void OnChangeFontButton();
	afx_msg void OnChangeTextEdit();
	afx_msg void OnChangeScaleHeightEdit();
	afx_msg void OnChangeScaleWidthEdit();
	afx_msg void OnProportionalCheck();
	virtual BOOL OnInitDialog();
	afx_msg void OnDrawItem(int nIDCtl, LPDRAWITEMSTRUCT lpDrawItemStruct);
	afx_msg void OnShowStitchesCheck();
	afx_msg void OnShowJumpsCheck();
	afx_msg void OnRunningOutlineCheck();
	afx_msg void OnChangeRunningLengthEdit();
	afx_msg void OnChangeRunningThreadsEdit();
	afx_msg void OnPreserveDetailsCheck();
	//}}AFX_MSG
	DECLARE_MESSAGE_MAP()
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_LETTERDIALOG_H__D40F09E6_DE2A_459A_9BC9_6E92EF8DDF52__INCLUDED_)
