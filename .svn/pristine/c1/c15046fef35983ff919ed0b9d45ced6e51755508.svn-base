// embroidermodder.h : main header file for the EMBROIDERMODDER application
//
// This sourcecode file is a part of embroidermodder.
// This program is free software; you can use, redistribute, and/or modify it
// under the terms of the GNU General Puplic License (GPL) as published by
// the Free Software Foundation.  See the file license.txt for details.
// http://embroidermodder.sourceforge.net/
//

#if !defined(AFX_EMBROIDERMODDER_H__840E5907_F822_4CAA_A411_1B8DADB4DBE2__INCLUDED_)
#define AFX_EMBROIDERMODDER_H__840E5907_F822_4CAA_A411_1B8DADB4DBE2__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#ifndef __AFXWIN_H__
	#error include 'stdafx.h' before including this file for PCH
#endif

#include "resource.h"       // main symbols
#include "Messaging.h"
#include "pattern.h"

// List of tasks that can be run during idle
#define IDLETASK_CREATE_BITMAP 1

// String used in generating Load and Save dialog boxes...  See CFileDialog documentation for format description.
#define FILE_FORMATS_STRING "Embroidery Formats|*.dst; *.csv; *.exp; *.pes; *.pcs; *.ksm; *.hus|KSM|*.ksm|HUS|*.hus|Baby Lock (*.pes)|*.pes|PCS|*.pcs|EXP|*.exp|Tajima (*.dst)|*.dst|Excel (*.csv)|*.csv|All Files (*.*)|*.*||"

/////////////////////////////////////////////////////////////////////////////
// CEmbroidermodderApp:
// See embroidermodder.cpp for the implementation of this class
//

class CEmbroidermodderApp : public CWinApp
{
public:
	class status_io status;
	CEmbroidermodderApp();

// Overrides
	// ClassWizard generated virtual function overrides
	//{{AFX_VIRTUAL(CEmbroidermodderApp)
	public:
	virtual BOOL InitInstance();
	virtual BOOL OnIdle(LONG lCount);
	//}}AFX_VIRTUAL

// Implementation
	//{{AFX_MSG(CEmbroidermodderApp)
	afx_msg void OnAppAbout();
	afx_msg void OnFileOpen();
	afx_msg void OnFileSave();
	//}}AFX_MSG
	DECLARE_MESSAGE_MAP()

	// IDLE QUEUE variables and routines
	public:
	int idle_queue_len;
	int idle_queue_allocated;
	struct idle_queue_entry {
		int task;
		void *owner;
	} *idle_queue;

	void queue_idletask(int task, void *owner);
	BOOL execute_idletask(void);
	void flush_my_idletasks(void *owner);
};


/////////////////////////////////////////////////////////////////////////////

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_EMBROIDERMODDER_H__840E5907_F822_4CAA_A411_1B8DADB4DBE2__INCLUDED_)
